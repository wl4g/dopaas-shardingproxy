#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# External logical database schema.
schemaName: paymentdb

# Extension default datasource configuration.
## @see:com.wl4g.shardingproxy.config.ProxyConfigurationLoader2#loadRuleConfiguration
## @see:org.apache.shardingsphere.mode.manager.cluster.coordinator.ClusterContextManagerCoordinator#renew(RuleConfigurationsChangedEvent)
extensionDefaultDataSource:
  username: root
  password: 123456
  connectionTimeoutMilliseconds: 30000
  idleTimeoutMilliseconds: 60000
  maxLifetimeMilliseconds: 1800000
  maxPoolSize: 50
  minPoolSize: 1

# Specification datasource configuration.
dataSources:
  ## MGR cluster 0
  ## Instance 0
  ds_paymentdb_r0z0mgr0i0_db0:
    url: 'jdbc:mysql://n0.rds.local:3306/paymentdb_r0z0mgr0db0?serverTimezone=UTC&useSSL=false&allowMultiQueries=true&characterEncoding=utf-8'
  ds_paymentdb_r0z0mgr0i0_db1:
    url: 'jdbc:mysql://n0.rds.local:3306/paymentdb_r0z0mgr0db0?serverTimezone=UTC&useSSL=false&allowMultiQueries=true&characterEncoding=utf-8'
  ## Instance 1
  ds_paymentdb_r0z0mgr0i1_db0:
    url: 'jdbc:mysql://n1.rds.local:3306/paymentdb_r0z0mgr0db0?serverTimezone=UTC&useSSL=false&allowMultiQueries=true&characterEncoding=utf-8'
  ds_paymentdb_r0z0mgr0i1_db1:
    url: 'jdbc:mysql://n1.rds.local:3306/paymentdb_r0z0mgr0db1?serverTimezone=UTC&useSSL=false&allowMultiQueries=true&characterEncoding=utf-8'
  ## Instance 2
  ds_paymentdb_r0z0mgr0i2_db0:
    url: 'jdbc:mysql://n2.rds.local:3306/paymentdb_r0z0mgr0db0?serverTimezone=UTC&useSSL=false&allowMultiQueries=true&characterEncoding=utf-8'
  ds_paymentdb_r0z0mgr0i2_db1:
    url: 'jdbc:mysql://n2.rds.local:3306/paymentdb_r0z0mgr0db1?serverTimezone=UTC&useSSL=false&allowMultiQueries=true&characterEncoding=utf-8'
  ## MGR cluster single (no-sharding)
  ds_paymentdb_r0z0mgr2_single:
    url: 'jdbc:mysql://n0.rds.local:3306/paymentdb_r0z0mgr2_single?serverTimezone=UTC&useSSL=false&allowMultiQueries=true&characterEncoding=utf-8'

# Schema rules configuration.
rules:
## @see:org.apache.shardingsphere.singletable.config.SingleTableRuleConfiguration
## @see:org.apache.shardingsphere.singletable.yaml.config.swapper.SingleTableRuleConfigurationYamlSwapper#getRuleTagName
- !SINGLE
  defaultDataSource: ds_paymentdb_r0z0mgr2_single

## @see:https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/
## @see:org.apache.shardingsphere.sharding.api.config.ShardingRuleConfiguration
## @see:org.apache.shardingsphere.sharding.route.engine.type.standard.ShardingStandardRoutingEngine#route
- !SHARDING
  tables:
    t_bill:
      ## The union set definition of all available actual dataSources.(Notice: dataSource sharding based on advanced heterogeneous grouping algorithm)
      ## @see:org.apache.shardingsphere.sharding.rule.TableRule#TableRule()
      actualDataNodes: rw_paymentdb_r0z0mgr0_db${0..1}.t_bill_${0..3}
      #databaseStrategy:
      tableStrategy:
        standard:
          shardingColumn: id
          shardingAlgorithmName: alg_auto_interval_table_0
      keyGenerateStrategy:
        column: id
        keyGeneratorName: gen_snowflake_g0_0
  bindingTables:
  - t_bill
  defaultTableStrategy:
  defaultDatabaseStrategy:
    standard:
      shardingColumn: id
      shardingAlgorithmName: alg_interval_database_0
  keyGenerators:
    gen_snowflake_g0_0:
      type: SNOWFLAKE
      props:
        worker-id: '1' # Range[0,1024),see:org.apache.shardingsphere.sharding.algorithm.keygen.SnowflakeKeyGenerateAlgorithm#getWorkerId()
  shardingAlgorithms:
    alg_interval_database_0:
      type: INTERVAL
      props:
        datetime-pattern: 'yyyy-MM-dd HH:mm:ss'
        datetime-lower: '2020-01-01 00:00:00'
        datetime-upper: '2030-12-31 00:00:00'
        sharding-suffix-pattern: yyyyMM
        datetime-interval-amount: 1
        datetime-interval-unit: MONTHS
    ## @see:org.apache.shardingsphere.sharding.algorithm.sharding.datetime.IntervalShardingAlgorithm
    alg_auto_interval_table_0:
      type: AUTO_INTERVAL
      props:
        datetime-lower: '2020-01-01 00:00:00'
        datetime-upper: '2030-12-31 00:00:00'
        sharding-seconds: '86400'

## @see:org.apache.shardingsphere.readwritesplitting.yaml.config.rule.YamlReadwriteSplittingDataSourceRuleConfiguration
## @see:org.apache.shardingsphere.readwritesplitting.yaml.config.YamlReadwriteSplittingRuleConfiguration
- !READWRITE_SPLITTING
  dataSources:
    rw_paymentdb_r0z0mgr0_db0:
      writeDataSourceName: ds_paymentdb_r0z0mgr0i1_db0
      readDataSourceNames:
        - ds_paymentdb_r0z0mgr0i1_db0
        - ds_paymentdb_r0z0mgr0i2_db0
      loadBalancerName: r_lb_0
    rw_paymentdb_r0z0mgr0_db1:
      writeDataSourceName: ds_paymentdb_r0z0mgr0i1_db1
      readDataSourceNames:
        - ds_paymentdb_r0z0mgr0i1_db1
        - ds_paymentdb_r0z0mgr0i2_db1
      loadBalancerName: r_lb_0
  loadBalancers:
    r_lb_0:
      type: RANDOM
## @see:org.apache.shardingsphere.readwritesplitting.api.DatabaseDiscoveryRuleConfiguration
- !DB_DISCOVERY
   dataSources:
     ha_paymentdb_r0z0mgr0:
       discoveryTypeName: default_dis_r0z0mgr
       discoveryHeartbeatName: default_mgr_heartbeat
       dataSourceNames:
         # Instance 0
         - ds_paymentdb_r0z0mgr0i0_db0
         - ds_paymentdb_r0z0mgr0i0_db1
         # Instance 1
         - ds_paymentdb_r0z0mgr0i1_db0
         - ds_paymentdb_r0z0mgr0i1_db1
         # Instance 2
         - ds_paymentdb_r0z0mgr0i2_db0
         - ds_paymentdb_r0z0mgr0i2_db1
   discoveryHeartbeats:
     default_mgr_heartbeat:
       props:
         keep-alive-cron: '0/5 * * * * ?'
   discoveryTypes:
     ## HA MGR architecture see: https://blog.csdn.net/n88Lpo/article/details/118315051
     default_dis_r0z0mgr:
       type: MGR
       props:
         ## Must be consistent with the MGR configuration group name.
         ## @see:https://github.com/apache/shardingsphere/blob/5.1.0/shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-provider/shardingsphere-db-discovery-mgr/src/main/java/org/apache/shardingsphere/dbdiscovery/mgr/MGRDatabaseDiscoveryType.java#L95
         ## @see:https://github.com/apache/shardingsphere/blob/5.1.0/examples/shardingsphere-sample/shardingsphere-example-generated/shardingsphere-proxy-sample/shardingsphere-proxy-cluster-etcd-local-db-discovery-example/src/main/resources/conf/config-db-discovery.yaml#L56
         ## @see:https://github.com/mysql/mysql-server/blob/mysql-5.7.30/rapid/plugin/group_replication/src/plugin.cc#L1726
         ## @see:SELECT * FROM performance_schema.global_variables WHERE VARIABLE_NAME='group_replication_group_name'
         group-name: 5db40c3c-180c-11e9-afbf-005056ac6820
         ## @see:org.apache.shardingsphere.dbdiscovery.mgr.MGRDatabaseDiscoveryType#extDiscoveryConfig
         extensionDiscoveryConfigJson: |-
           {
             "memberHostMappings": [{
                 "rds-mgr-0:3306": [
                     "n0.rds.local:3306"
                 ]
             }, {
                 "rds-mgr-1:3306": [
                     "n1.rds.local:3306"
                 ]
             }, {
                 "rds-mgr-2:3306": [
                     "n2.rds.local:3306"
                 ]
             }]
           }
