<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>xcloud-shardingproxy-agent-bootstrap</artifactId>
	<packaging>jar</packaging>
	<name>XCloud ShardingProxy Agent Bootstrap</name>
	<url>http://xcloud.wl4g.com</url>
	<description>A XCloud Integration Shardingsphere Agent Bootstrap.</description>
	<organization>
		<name>wl4g</name>
		<url>https://xcloud.wl4g.com</url>
	</organization>
	<licenses>
		<license>
			<name>Apache License Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:wl4g/xcloud-component.git</connection>
		<developerConnection>scm:git:git@github.com:wl4g/xcloud-component.git</developerConnection>
		<url>https://github.com/wl4g/xcloud-component</url>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>github</system>
		<url>https://github.com/wl4g/xcloud-component/issues</url>
	</issueManagement>
	<developers>
		<developer>
			<id>Wangl01</id>
			<name>Wanglsir</name>
			<email>wanglsir@gmail.com,983708408@qq.com</email>
			<roles>
				<role>owner</role>
				<role>maintainer</role>
				<role>developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
		<developer>
			<id>xburnerair00</id>
			<name>xburnerair00</name>
			<email>xburnerair00@163.com</email>
			<roles>
				<role>maintainer</role>
				<role>developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
	</developers>
	<parent>
		<groupId>com.wl4g</groupId>
		<artifactId>xcloud-shardingproxy</artifactId>
		<version>2.2.1_5.1.0</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<premain.class>com.wl4g.shardingproxy.agent.ShardingProxyAgent</premain.class>
		<can.redefine.classes>true</can.redefine.classes>
		<can.retransform.classes>true</can.retransform.classes>
		<!-- <shade.package>org.apache.shardingsphere.dependencies</shade.package> -->
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
		</dependency>
		<!-- 坑1: 这里不直接引用 shardingsphere-agent-bootstrap 的原因是 它本身使用 shade 插件打出来的 jar 文件里会将 net.bytebuddy 等依赖的包名重命名为 org.apache.shardingsphere.dependencies 
			下面，但是其他的插件模块如 shardingsphere-agent-tracing-opentracing 是独立打包的，生成的 jar 里面方法调用还是 net.bytebuddy，而导致了 NoSuchMethed 错误. 这里的解决措施是直接将 
			shardingsphere-agent-bootstrap 模块的那一点点代码拷贝到此本模块，使用 shade 打包时去掉重命名即可。 -->
		<dependency>
			<groupId>org.apache.shardingsphere</groupId>
			<artifactId>shardingsphere-agent-api</artifactId>
			<version>${shardingsphere.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shardingsphere</groupId>
			<artifactId>shardingsphere-agent-core</artifactId>
			<version>${shardingsphere.version}</version>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>false</shadedArtifactAttached>
							<createDependencyReducedPom>true</createDependencyReducedPom>
							<createSourcesJar>true</createSourcesJar>
							<shadeSourcesContent>true</shadeSourcesContent>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Premain-Class>${premain.class}</Premain-Class>
										<Can-Redefine-Classes>${can.redefine.classes}</Can-Redefine-Classes>
										<Can-Retransform-Classes>${can.retransform.classes}</Can-Retransform-Classes>
									</manifestEntries>
								</transformer>
							</transformers>
							<artifactSet>
								<includes>
									<include>org.apache.shardingsphere:*</include>
									<include>net.bytebuddy:byte-buddy</include>
								</includes>
								<excludes>
									<exclude>com.google.*:*</exclude>
									<exclude>com.google.guava:guava:*</exclude>
									<exclude>org.checkerframework:checker-qual:*</exclude>
									<exclude>org.slf4j:*</exclude>
									<exclude>org.yaml:snakeyaml:*</exclude>
									<exclude>org.apache.commons:logging:*</exclude>
								</excludes>
							</artifactSet>
							<!-- <relocations> -->
							<!-- <relocation> -->
							<!-- <pattern>net.bytebuddy</pattern> -->
							<!-- <shadedPattern>${shade.package}.net.bytebuddy</shadedPattern> -->
							<!-- </relocation> -->
							<!-- </relocations> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>